#!/usr/bin/env node

var fs = require('fs');

var libdb = require('./libdb.js')
var iterateOnFile = libdb.iterateOnFile;
var recordMatched = libdb.recordMatched;

var query = eval('(' + process.argv[3] + ')');

var updates = eval('(' + process.argv[4] + ')');
var updatesKeys = Object.keys(updates);

var tempFile = fs.createWriteStream(process.argv[2] + '.temp');
var recordsUpdated = 0;

var updateTempFile = function updateTempFile (record) {

    if ( recordMatched(record, query) ) {
        updatesKeys.forEach( function (key) {
            if (updates[key] !== null && typeof(updates[key]) === 'object') {
              if( updates[key].hasOwnProperty('$function')) {
                  record[key] = eval(updates[key]['$function'])(record);
              } else {
                  record[key] = updates[key];
              }
            } else {
                record[key] = updates[key];
            }
        });
        recordsUpdated += 1;
    }

    tempFile.write(JSON.stringify(record) + '\n');
};

var writeChanges = function writeChanges () {
    tempFile.end();
    fs.rename(process.argv[2] + '.temp', process.argv[2], function () {
        process.stdout.write('Updated ' + recordsUpdated + ' records.');
    });
};

iterateOnFile( updateTempFile, writeChanges );
